Why springboot
Spring modules
Application Context
IOC and DI (Types of DI)
Which DI to prefer
Cyclic dependency
HTTP REST methods
PUT vs POST
Validating request parameters -> @Valid , @otNull, @Size(), @Min, @Max(), @Email -> InvalidMethodArgumentException
Errors while requestparam | MissingServletRequestParameterException, 
requestheader | MissingRequestHeaderException,
requestbody | HttpMessageNotReadableException(if not able to deserialize or datatype mismatch) or 400 error code
resttemplate
RestTenmplate -> getForObject(url, class), getForEntity(url, class), exchange(url,method,httpentity,class)
HTTP Status Codes
  200 -> OK
  201 -> Created
  204 -> No Content
  400 -> Bad Request
  401 -> Authentication Error
  403 -> Authorization Error
  405 -> Method Not Allowed
  415 -> Unsopported Media type
  404 -> Not Found
  501 -> Internal Server Error

Spring Boot Main annotations
--------------------------------------------------
1. @SpringBootApplication
2. @ComponentScan
3. @EanbleAutoConfiguration
4. @Configuration

Stereotype annotation
----------------------------------------
1.  @Component
2.  @Service
3.  @RestController / @Controller
4.  @Repository

Spring Core related Annotations:
----------------------------------------------------
@Configuration
@Bean
@Autowired 
@Qualifier 
@Lazy 
@Value 
@PropertySource
@ConfigurationProperties 
@Profile vs @ActiveProfile
@Scope

REST API related Annotations:
------------------------------------------------
@RestController
@RequestMapping
@GetMapping
@PostMapping
@PutMapping
@DeleteMapping
@RequestBody 
@PathVariable
@RequestParam
@ControllerAdvice & @ExceptionHandler

Spring Data JPA related annotations:
------------------------------------------------------------
@Entity
@Table
@Column
@Transactional 
Entity class relationships 
@OnetoOne 
@OnetoMany 
@ManytoOne
@ManytoMany


